import 'dart:math';
import 'package:flutter/material.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  String phrase = '';

  @override
  void initState() {
    super.initState();
    _loadPhrase();
  }

  void _loadPhrase() {
    final now = TimeOfDay.now();
    final isMorning = now.hour >= 5 && now.hour < 12;
    final isEvening = now.hour >= 20 || now.hour < 5;
    final parts = isMorning
        ? _phrasesMorning
        : (isEvening ? _phrasesEvening : _phrasesDay);
    setState(() => phrase = parts[Random().nextInt(parts.length)]);
  }

  String _greeting() {
    final h = TimeOfDay.now().hour;
    if (h >= 5 && h < 12) return '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ üåû';
    if (h >= 20 || h < 5) return '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ üåô';
    return '–¢—ë–ø–ª–æ–≥–æ –¥–Ω—è ‚ú®';
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Warmly'), centerTitle: true),
      bottomNavigationBar: BottomNavigationBar(
        items: const [
          BottomNavigationBarItem(icon: Icon(Icons.home), label: '–î–æ–º–æ–π'),
          BottomNavigationBarItem(icon: Icon(Icons.favorite), label: '–ê—Ä—Ö–∏–≤'),
          BottomNavigationBarItem(icon: Icon(Icons.settings), label: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'),
        ],
        currentIndex: 0,
        onTap: (i) {
          if (i == 1) Navigator.pushNamed(context, '/archive');
          if (i == 2) Navigator.pushNamed(context, '/settings');
        },
      ),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Text(_greeting(), style: const TextStyle(fontSize: 20, fontWeight: FontWeight.w600)),
            const SizedBox(height: 16),
            Expanded(
              child: Container(
                padding: const EdgeInsets.all(20),
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(16),
                ),
                child: Center(
                  child: Text(
                    phrase,
                    textAlign: TextAlign.center,
                    style: const TextStyle(fontSize: 20, fontStyle: FontStyle.italic),
                  ),
                ),
              ),
            ),
            const SizedBox(height: 16),
            ElevatedButton(
              onPressed: () => Navigator.pushNamed(context, '/mood'),
              child: const Text('–ö–∞–∫ —Ç—ã? üòä üòê üòû'),
            ),
            const SizedBox(height: 8),
            ElevatedButton(
              onPressed: () => Navigator.pushNamed(context, '/send'),
              child: const Text('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ç–µ–ø–ª–æ–º üíå'),
            ),
          ],
        ),
      ),
    );
  }
}

const _phrasesMorning = [
  '–°–µ–≥–æ–¥–Ω—è –º–æ–∂–Ω–æ –∏–¥—Ç–∏ –º—è–≥–∫–æ. –¢—ã –Ω–µ –æ–±—è–∑–∞–Ω —Å–ø–µ—à–∏—Ç—å.',
  '–¢—ã —É–∂–µ —Å–¥–µ–ª–∞–ª –≥–ª–∞–≤–Ω–æ–µ ‚Äî –ø—Ä–æ—Å–Ω—É–ª—Å—è. –≠—Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.',
  '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ. –¢–≤–æ—è —Ü–µ–Ω–Ω–æ—Å—Ç—å –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.',
];

const _phrasesDay = [
  '–°–¥–µ–ª–∞–π –≤–¥–æ—Ö. –¢—ã –∏–º–µ–µ—à—å –ø—Ä–∞–≤–æ –Ω–∞ –ø–∞—É–∑—É.',
  '–ï—Å–ª–∏ —Ç—è–∂–µ–ª–æ ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –¢—ã –Ω–µ –æ–¥–∏–Ω.',
  '–¢—ã –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ö–æ—Ä–æ—à –ø—Ä–æ—Å—Ç–æ —Ç–µ–º, —á—Ç–æ –µ—Å—Ç—å.',
];

const _phrasesEvening = [
  '–°–µ–≥–æ–¥–Ω—è —Ç—ã —Å–¥–µ–ª–∞–ª –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ. –û—Ç–¥—ã—Ö ‚Äî —Ç–æ–∂–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ.',
  '–°–ø–∞—Å–∏–±–æ —Å–µ–±–µ –∑–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å. –¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è.',
  '–ù–æ—á—å ‚Äî —á—Ç–æ–±—ã –º—è–≥–∫–æ –æ—Ç–ø—É—Å—Ç–∏—Ç—å. –°–ø–æ–∫–æ–π–Ω–æ–π —Ç–µ–±–µ —Ç–∏—à–∏–Ω—ã.',
];